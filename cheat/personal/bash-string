Bash is strong, but silly
https://tldp.org/LDP/abs/html/string-manipulation.html
also
https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
also Bash RegEx
https://stackoverflow.com/questions/1891797/capturing-groups-from-a-grep-regex

Default Values
: ${varname:=value} # Set varname equal to value if unset or null: note leading colon
varname="${VARIABLE:=default}" # Set varname AND VARIABLE equal to value if VARIABLE unset or null
varname="${VARIABLE:-default}" # Set varname equal to value if VARAIBLE unset or null

${varname/substring/replacement}
    Replace first match of $substring with $replacement. [2]

${varname//substring/replacement}
    Replace all matches of $substring with $replacement.

${varname##pattern}
    Delete longest (% for shortest) leading match of pattern

${varname%%pattern}
    Delete longest (% for shortest) trailing match of pattern

${varname:position}
    Extracts substring from $string at $position.
    If the $string parameter is "*" or "@", then this extracts the positional parameters, starting at $position.
    Negative numbers start from end of string

${varname:position:length}
    Extracts $length characters of substring from $string at $position.

${varname^pattern} # ^ for upper and , for lower
    Upper-case first character in pattern match

${varname^^pattern} # ^ for upper and , for lower
    Upper-case every character in pattern match

${#varname}
    Length of string
