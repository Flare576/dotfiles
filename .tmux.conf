# tmux is a terminal application that lets you have multiple "panes" open at once. If you've ever used iTerm
# on OSx, it's like that. Additionally, you can run multiple sessions of tmux and swap between them; though I
# haven't gotten that far yet.

# Important_Bindings
# General_Settings
# Windows/Panes
## Windows
## Panes
# Copy_Mode
# References


############################## Important_Bindings ###########
set -g prefix M-a                                   # remap prefix to Control + a
bind M-a send-prefix                                # bind 'C-a C-a' to type 'C-a'
unbind C-b                                          # remove original binding of C-b
bind r source-file ~/.tmux.conf                     # reload tmux settings
bind -n M-: command-prompt                          # Alt+Shift+: = open command-prompt
bind -n M-Q kill-session                            # Alt+Shift+Q = kill session
bind -n M-P detach-client                           # Alt+Shift+P = "Pause" (Detach) session
# C-k for clear screen (-R resets on-screen terminal, clear-history clears "off screen"), unless vim is running
bind -n C-k if-shell "$is_vim" 'send-keys C-k'  'send-keys -R ; clear-history'


############################## General_Settings ###########
# source-file $HOME/dotfiles/themes/.solarized-dark_tmux
source-file $HOME/dotfiles/themes/flare_tmux
set -g mouse on                                     # allows mouse clickies
set-option -g base-index 1                          # Some plugins conflict with 0-indexed elements
set-window-option -g pane-base-index 1              # Some plugins conflict with 0-indexed elements

############################## Windows/Panes ###########

########################## Windows (Alt+Shift)
# New
bind -n M-| new-window                      # Alt+Shift+| = open new pane
bind -n M-_ new-window                      # Alt+Shift+_ = open new pane
# Navigate ← ↓ ↑ →
bind -n M-K select-window -t :^             # « using Alt+Shift+K without prefix
bind -n M-J select-window -t :$             # » using Alt+Shift+J without prefix
bind -n M-H previous-window                 # ← using Alt+Shift+H without prefix
bind -n M-L next-window                     # → using Alt+Shift+L without prefix
# Next/Previous
bind -n M-'{' previous-window               # ← using Alt+Shift+{ without prefix
bind -n M-'}' next-window                   # → using Alt+Shift+} without prefix
# Focus
# Alt+Enter maximize/restore pane
bind -n M-Enter if-shell "[[ #{window_panes} -eq 1 || #{window_zoomed_flag} -eq 1 ]]" "resize-pane -Z" "resize-pane -Z"
bind Enter if-shell "[[ #{window_panes} -eq 1 || #{window_zoomed_flag} -eq 1 ]]" "resize-pane -Z" "resize-pane -Z"

########################## Panes (Alt)
# New
bind -n M-'\' split-window -h               # Alt+Shift+_ = split pane horizontal
bind -n M-'-' split-window -v               # Alt+Shift+_ = split pane vertical
# Navigate ← ↓ ↑ →
bind -n M-h select-pane -Z -L               # ← using Alt-h without prefix
bind -n M-j select-pane -Z -D               # ↓ using Alt-j without prefix
bind -n M-k select-pane -Z -U               # ↑ using Alt-k without prefix
bind -n M-l select-pane -Z -R               # → using Alt-l without prefix
# Next/Previous
bind -n M-] select-pane -Z -t "{next}"      # ↑ using Alt-k without prefix
bind -n M-[ select-pane -Z -t "{previous}"  # → using Alt-l without prefix
# Resize
bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1
# Modifier then Tab opens pane-select
bind -n M-Tab choose-tree

############################## Copy_Mode ###########

# pbcopy/pbpaste functionality in tmux (for Mac)
osx_copy='send -X copy-pipe-and-cancel "pbcopy"\; copy-selection-and-cancel'
# clip copy functionality for WSL
wsl_copy='send -X copy-pipe-and-cancel "clip.exe"\; copy-selection-and-cancel'
omni_copy='if-shell "$is_wsl" "$wsl_copy" "$osx_copy"'
# More-like-vim copy mode
set-window-option -g mode-keys vi                        # vim keys in copy mode
unbind -T copy-mode-vi Enter                             # Remove default Enter behavior
bind -T copy-mode-vi Enter "$omni_copy"                  # Map the universal system copy
bind -T copy-mode-vi y "$omni_copy"                      # Map the universal system copy
bind -T copy-mode-vi MouseDragEnd1Pane "$omni_copy"      # Map the universal system copy
bind -T copy-mode-vi v send -X begin-selection           # simulates "visual mode" selection
bind -T copy-mode-vi B send -X back-to-indentation       # simulates the vim binding "B" to start-of-line
bind -T copy-mode-vi E send -X end-of-line               # simulates the vim binding "E" to end-of-line
# By default, `C-v` only changes to rectangle selection
bind -T copy-mode-vi C-v send -X rectangle-toggle\; send -X begin-selection

# https://www.bugsnag.com/blog/tmux-and-vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_wsl="command -v clip.exe"

############################## Resources ###########
# Further reading
# Basic tutorials
# https://lukaszwrobel.pl/blog/tmux-tutorial-split-terminal-windows-easily/

# Status line
# https://medium.com/hackernoon/customizing-tmux-b3d2a5050207

# Copy/Paste
# https://thoughtbot.com/blog/tmux-copy-paste-on-os-x-a-better-future

# Example config
# https://github.com/c02y/dotfiles/blob/master/tmux/.tmux.conf

# Color palette
# https://superuser.com/questions/285381/how-does-the-tmux-color-palette-work

# Copy mode bindings
# https://superuser.com/questions/395158/tmux-copy-mode-select-text-block
